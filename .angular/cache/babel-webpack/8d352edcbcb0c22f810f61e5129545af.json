{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CompanyService = /*#__PURE__*/(() => {\n  class CompanyService {\n    constructor(http) {\n      this.http = http;\n      this.path = 'http://localhost:56183/api/company/';\n      this.httpOptions = {};\n    }\n\n    addCompany(company) {\n      this.setHttpOptions();\n      return this.http.post(this.path, {\n        Name: company.name,\n        Address: company.address,\n        AppUserId: company.userId,\n        Email: company.email,\n        Explanation: company.explanation,\n        PhoneNumber: company.phoneNumber,\n        PhotoString: company.photoString\n      }, this.httpOptions);\n    }\n\n    editCompany(company) {\n      this.setHttpOptions();\n      return this.http.put(this.path + company.id, {\n        Id: company.id,\n        Address: company.address,\n        Name: company.name,\n        Email: company.email,\n        Explanation: company.explanation,\n        PhoneNumber: company.phoneNumber,\n        PhotoString: company.photoString\n      }, this.httpOptions).toPromise();\n    }\n\n    deleteCompany(id) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.setHttpOptions();\n        const response = yield this.http.delete(this.path + id, this.httpOptions).toPromise();\n        return response;\n      });\n    }\n\n    getUserCompanies() {\n      this.setHttpOptions();\n      return this.http.get(this.path + 'getcompanies/' + sessionStorage.getItem('userId'), this.httpOptions);\n    }\n\n    getCompanyById(id) {\n      this.setHttpOptions();\n      return this.http.get(this.path + `${id}`, this.httpOptions);\n    }\n\n    ifUserHaveCompany() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.setHttpOptions();\n        const response = yield this.getUserCompanies().toPromise();\n\n        if (response.length === 0) {\n          return false;\n        }\n\n        return true;\n      });\n    }\n\n    setHttpOptions() {\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + sessionStorage.getItem('token')\n        })\n      };\n    }\n\n  }\n\n  CompanyService.ɵfac = function CompanyService_Factory(t) {\n    return new (t || CompanyService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CompanyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CompanyService,\n    factory: CompanyService.ɵfac\n  });\n  return CompanyService;\n})();","map":null,"metadata":{},"sourceType":"module"}